// File: framer_ctrl.v
// Generated by MyHDL 0.10
// Date: Tue Sep 18 16:43:21 2018


`timescale 1ns/10ps

module framer_ctrl (
    sof,
    state,
    sync_flag,
    clk,
    reset_n
);
// Framing control FSM.
// 
// sof -- start-of-frame output bit
// state -- FramerState output
// sync_flag -- sync pattern found indication input
// clk -- clock input
// reset_n -- active low reset

output sof;
reg sof;
output [1:0] state;
reg [1:0] state;
input sync_flag;
input clk;
input reset_n;

reg [2:0] index;



always @(posedge clk, negedge reset_n) begin: FRAMER_CTRL_FSM
    if (reset_n == 0) begin
        state <= 2'b00;
        sof <= 0;
        index <= 0;
    end
    else begin
        index <= ((index + 1) % 8);
        sof <= 0;
        case (state)
            2'b00: begin
                index <= 1;
                if (sync_flag) begin
                    state <= 2'b01;
                end
            end
            2'b01: begin
                if ((index == 0)) begin
                    if (sync_flag) begin
                        state <= 2'b10;
                    end
                    else begin
                        state <= 2'b00;
                    end
                end
            end
            2'b10: begin
                if ((index == 0)) begin
                    if ((!sync_flag)) begin
                        state <= 2'b00;
                    end
                end
                sof <= ($signed({1'b0, index}) == (8 - 1));
            end
            default: begin
                $finish;
            end
        endcase
    end
end

endmodule
